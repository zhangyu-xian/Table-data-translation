sys_content = """
你是一个建筑结构领域的专家，具有丰富的土木、结构、水利等相关领域知识，请仔细思考。
"""

tableHeaderPromptText = """

请根据给你的以字典格式表达的表格第1行和第1列数据，仔细判断表头是第1行还是第1列。
请根据专业的土木、水利、建筑领域知识，仔细分析第1列和第1行列表元素，判断元素间是否存在属于和被属于关系，即某元素是另一个元素的具体值。
如果存在属于和被属于关系，则不是表头；如果不存在属于和被属于关系，则是表头。
请注意，仔细思考是否存在属于和被属于关系，必须在第1行或第1列中选择表头位置。
如果认为第1行和第1列中的元素均存在明显的属于和被属于关系选择，则仔细思考，选择不具有明确的属于和被属于关系或不具有明确的父类子类关系或不具有明确数值关系的位置作为表头。
请将结果以JSON的格式表达，包括表头位置和原因：
{"表头位置":第1行或第1列, "原因": ""}
请你按照以下的步骤思考：
Step 1: 去掉第1行和第1列列表中重复的内容；
Step 2: 理解第1行列表中元素的语义，判断各元素间是否存在属于和被属于关系。如果包含属于和被属于关系，则第1行不是表头；如果不包含属于和被属于关系，则第1行是表头。
Step 3: 理解第1列列表中元素的语义，判断各元素间是否存在属于和被属于关系。如果包含属于和被属于关系，则第1列不是表头；如果不包含属于和被属于关系，则第1列是表头。
Step 4: 结合Step 2和Step 3的判断结果，答案：{"表头位置":"第1行"或"第1列", "原因":""}。

<Example>:
Question: 请根据给你的以字典格式表达的表格第1行和第1列数据，判断表头是第1行还是第1列。
{'第1行':['计算方法', '建筑物级别', '建筑物级别', '建筑物级别'], '第1列':['计算方法', '计算方法', '拟静力法', '动力法']}

Answer:
Step 1: 去掉第1行和第1列列表中的重复元素：
        '第1行'：['计算方法', '建筑物级别']；'第1列': ['计算方法', '拟静力法', '动力法']
Step 2: 理解第1行列表中元素的语义。第1行中的元素为计算方法和建筑物级别，计算方法不属于建筑物级别，并且建筑物级别不属于计算方法，因此，计算方法和建筑物级别没有明显的属于和被属于关系，第1行是两个独立的元素。因此，第1行是表头。
Step 3: 理解第1列列表中元素的语义。第1列中的元素为计算方法、拟静力法和动力法，拟静力法和动力法属于具体的计算方法，第1列中存在明显的属于和被属于关系。因此，第1列不是表头。
Step 4: Step 2中判断第1行是表头，Step 3中判断第1列不是表头。因此，
        答案：{"表头位置":"第1行", "原因":"第1行的元素为计算方法和建筑物级别，计算方法和建筑物级别没有明显的属于和被属于关系，第1行是两个独立的元素。因此，第1行是表头。"}。
</Example>

Question: 请根据给你的以字典格式表达的表格第1行和第1列数据，判断表头是第1行还是第1列。请根据给你的思考步骤和例子仔细分析判断。
{Table_data}
Answer:
"""

sys_TableCaptionText = """
您将获得描述表格内容的句子和表格标题，请你仔细分析句子和表格标题包含的语义信息，给出表格描述的主要对象和主要属性。
主要对象可能是结构的名词，例如拱坝、重力坝、隧道、盾构隧道、坝肩、拱座等。但不限于这些。
主要属性可能是描述指标的名词，例如参数、指标、温度、容差等。但不限于这些。
"""

tableObjectAndAttributeReasonText = """
请你根据描述表格内容的句子和表格标题，结合土木、结构、水利等相关领域知识，分析出表格描述的主要对象和主要属性。
请将分析结果以JSON格式给出。形式化的JSON格式为：{"主要对象":"***", "主要属性":"***"}。
如果没有，则值为NONE。

<Example>
Question: 请你根据描述表格内容的句子和表格标题，分析出表格描述的主要对象和主要属性。
          描述表格的句子：3.1.4当盾构隧道衬砌设计时，应根据结构破坏可能产生后果的严重性，采用不同的安全等级。盾构隧道衬砌安全等级的划分应符合表3.1.4的规定。
          表格标题：表3.1.4盾构隧道衬砌安全等级
Answer: {"主要对象":"衬砌", "主要属性":"安全等级"}

Question: 请你根据描述表格内容的句子和表格标题，分析出表格描述的主要对象和主要属性。
          描述表格的句子：9.1.5盾构隧道的抗震性能要求等级应符合表9.1.5的规定。
          表格标题：表9.1.5抗震性能要求等级
Answer: {"主要对象":"盾构隧道", "主要属性":"抗震性能要求等级"}

Question: 请你根据描述表格内容的句子和表格标题，分析出表格描述的主要对象和主要属性。
          描述表格的句子：he一一安全加高，按表4.2.1采用。
          表格标题：表4.2.1安全加高h单位：m
Answer: {"主要对象":"NONE", "主要属性":"安全加高"}

Question: 请你根据描述表格内容的句子和表格标题，分析出表格描述的主要对象和主要属性。
          描述表格的句子：纵向受拉钢筋的最小配筋率不应小于表4.4.8-1规定的数值。
          表格标题：表4.4.8-1梁纵向受拉钢筋最小配筋率（%）
Answer: {"主要对象":"梁纵向受拉钢筋", "主要属性":"最小配筋率"}

Question: 请你根据描述表格内容的句子和表格标题，分析出表格描述的主要对象和主要属性。
          描述表格的句子：管片螺栓孔直径宜按表8.2.7选用。
          表格标题：表8.2.7 管片螺栓孔直径（mm）
Answer: {"主要对象":"管片", "主要属性":"螺栓孔直径"}
</Example>

Question: 请你根据描述表格内容的句子和表格标题，分析出表格描述的主要对象和主要属性。
描述表格的句子：{Table_sentence}
表格标题：{Table_caption}

Answer:
"""

sys_similarity_analysis_text = """
接下来会给你表格的主要属性和表格表头列表。请你充分理解主要属性和表头列表中元素的语义。
"""

user_similarity_analysis_text = """
请你根据主要属性和表头列表元素间的语义相似度，提取表头列表中具有与主要属性高相似度的元素，这些元素被认为是属性，其余元素被认为是条件。
请注意，如果表头列表中没有高相似度元素，则属性是None，表头列表中的所有元素均为条件。
从表头列表中提取属性时特别注意列表中与主要属性有重复文本的元素。属性和条件只能从表头列表中提取，不要增加其他文本。
请将分析结果按照JSON格式输出。形式化的JSON格式为：{"属性":"[]","条件":"[]"}。

<Example>
Question:请你根据表头列表和主要属性，仔细分析表头列表中哪些元素具有和主要元素具有高相似度，提取这些元素到属性列表，表头列表中其他元素作为条件列表。
         表头列表：['项次', '部位', '水力坡降', '抗渗等级']
         主要属性：抗渗等级
Answer:{"属性":"['抗渗等级']","条件":"['项次', '部位', '水力坡降']"}

Question:请你根据表头列表和主要属性，仔细分析表头列表中哪些元素具有和主要元素具有高相似度，提取这些元素到属性列表，表头列表中其他元素作为条件列表。
         表头列表：['结构类型', '结构类型', '允许值（mm）']
         主要属性：最大计算裂缝宽度允许值
Answer:{"属性":"['允许值（mm）']","条件":"['结构类型', '结构类型']"}

Question:请你根据表头列表和主要属性，仔细分析表头列表中哪些元素具有和主要元素具有高相似度，提取这些元素到属性列表，表头列表中其他元素作为条件列表。
         表头列表：['永久荷载', '当永久荷载效应对结构不利时', '当永久荷载效应对结构有利时']
         主要属性：分项系数
Answer:{"属性":"[None]","条件":"['永久荷载', '当永久荷载效应对结构不利时', '当永久荷载效应对结构有利时']"}

Question:请你根据表头列表和主要属性，仔细分析表头列表中哪些元素具有和主要元素具有高相似度，提取这些元素到属性列表，表头列表中其他元素作为条件列表。
         表头列表：['地震作用', '水平地震作用分项系数 YEH', '竖向地震作用分项系数 YEV']
         主要属性：分项系数
Answer:{"属性":"['水平地震作用分项系数 YEH', '竖向地震作用分项系数 YEV']","条件":"['地震作用']"}
</Example>

Question:请你根据表头列表和主要属性，仔细分析表头列表中哪些元素具有和主要元素具有高相似度，提取这些元素到属性列表，表头列表中其他元素作为条件列表。
         表头列表：{Table_header_list}
         主要属性：{main_attribute}
Answer:
"""


# 表头列表中不存在属性
sys_cell_analysis_text = "接下来你将获得特殊格式描述的表格。你将凭借专业的土木、结构、水利、水文等相关领域知识根据表格内容回答问题。" \
                      "图形定义：我们将表中的每个单元格视为图形中的一个节点，由元组(行索引, 列索引, 单元格内容)表示。" \
                      "例如，(1, 0, “计算方法”)表示第1行第0列中的节点，内容为“计算方法”。三元组（1, 0, “计算方法”)、" \
                      "(1, 4, “建筑物级别”)和(3, 0, “拟静力法”)代表三个节点，其中“建筑物级别”和“计算方法”具有共行关系，" \
                      "“计算方法”和“拟静力法”具有共列关系，“计算方法”是“建筑物级别”和“拟静力法”的共享邻居。" \
                      "关系定义：我们将表中两个单元间的关系定义为以下三种：键-值关系、相同关系和None。" \
                      "键-值关系：两个元组的单元格内容间存在定义和具体值关系，具体值可以是与定义存在属于和被属于关系的子类，也可以是具体的数值。" \
                      "例如元组(0, 1, 气候分区)和(1, 1, 严寒和寒冷区)，由于严寒和寒冷区属于气候分区的一种类型，严寒和寒冷区属于气候分区，因此两个元组间为键-值关系。" \
                      "元组(0, 1, 结构类型)和(1, 1, 管片)，由于管片属于结构类型的一种具体类型，因此两个元组间为键-值关系" \
                      "元组(0, 3, 允许值(mm))和(1, 3, 0.2)，由于允许值(mm)是一种定义，并且0.2是具体的数值，因此两个元组间为键-值关系。" \
                      "元组(0, 1, 防水等级)和(1, 1, 一级)，由于防水等级是一种定义，并且一级是具体的数值，因此两个元组间为键-值关系。" \
                      "相同关系：两个元组具有相同的内容，例如例如元组(0, 1, 类别)和(1, 1, 类别)，由于两个元组的值均为“类别”，因此" \
                      "两个元组的关系为相同关系。" \
                      "None:不属于键-值关系和相同关系的两个元组。即两个元组值间没有明显的语义关联。" \


cell_relation_analysis = """
请你根据定义的关系，仔细分析两个元组的语义信息，并判断两个元组是否符合定义的关系类型。
"特别注意两个元组的单元格内容如果有重复文本时，则很大可能属于定义的键-值关系，请仔细思考。" 
将判断结果以JSON的格式输出。形式化的输出格式为{"关系":""}

<Example>
Question:请判断两个元组间是否存在定义的关系类型： (0, 1, 气候分区),(1, 1, 严寒和寒冷区)
Answer:{"关系":"键-值关系","解释":"严寒和寒冷区是描述特定气候的区域，因此属于气候分区。"}

Question:请判断两个元组间是否存在定义的关系类型： (0, 1, 建筑物级别),(1, 1, 1级)
Answer:{"关系":"键-值关系","解释":"根据土木工程知识，1级是建筑物的一个具体级别，属于建筑物级别的具体值。"}

Question:请判断两个元组间是否存在定义的关系类型： (0, 1, 建筑物级别),(1, 3, 2.3)
Answer:{"关系":"None","解释":"根据土木工程知识，建筑物级别应该是整数，并且具体的值通常表示为1级、2级等，而2.3是一个小数。因此两个元组关系为None。"}

Question:请判断两个元组间是否存在定义的关系类型： (0, 2, 峰值加速度),(1, 2, 峰值加速度)
Answer:{"关系":"相同关系","解释":"两个元组的值均为峰值加速度，因此关系为相同关系。"}

Question:请判断两个元组间是否存在定义的关系类型： (0, 0, 边长),(1, 0, 30-40 m)
Answer:{"关系":"键-值关系","解释":"第一个元组的值为边长，第二个元组的值为30-40 m，表示长度的值。因此两个元组属于键-值关系"}

Question:请判断两个元组间是否存在定义的关系类型： (0, 0, 边长),(1, 0, 20~40)
Answer:{"关系":"None","解释":"第一个元组的值为边长，第二个元组的值为20~40，没有单位，是一个模糊的数值。因此两个元组关系为None。"}

Question:请判断两个元组间是否存在定义的关系类型： (0, 0, 素混凝土),(1, 0, C20)
Answer:{"关系":"None","解释":"第一个元组的值为素混凝土，第二个元组的值为C20，根据土木工程知识，C20是混凝土的具体强度等级值，而不属于素混凝土的具体类型。因此两个元组关系为None。"}
</Example>

Question:请判断两个元组间是否存在定义的关系类型： {Tuple_pair}
Answer:
"""

sys_attribute_formalized = """
接下来你将获得表格的属性和特殊格式描述的表格。你将根据表格内容回答问题。
图形定义：我们将表中的每个单元格视为图形中的一个节点，由元组(行索引, 列索引, 单元格值-与表头的关系)表示。
请注意，获得的表格第一行为表头单元格行，即行索引为0的单元格是表头。
与表头的关系包括：相同关系、键值关系和None。相同关系表示该单元格值和表头单元格值一样。键值关系表示该单元格与表头单元格存在键值关系，
具有键值关系的单元格是与行索引为0，列索引相同的单元格的值。None表示该单元格与表头单元格不存在键值关系。
例如(0, 0, 计算方法-表头)，表示第0行第0列的节点，单元格值为计算方法，表头表示该单元格是表头。(1, 1, 1级-键值关系)表示第1行第1列的节点，
单元格值为1级，键值关系表示与表头的关系是键值关系，相应的表头单元格是行索引为0，列索引为1的单元格。
(2, 1, 1级-None)表示第2行第1列的节点，单元格值为1级，None表示与表头的关系是None，相应的表头单元格是行索引为0，列索引为1的单元格。
"""

# 提取同行中的条件元组
user_query_tuple_row_text = """
获得的表格为
{Table_semantic_rich}
理解表格语义。表格中的元素为(行索引, 列索引, 单元格值-与表头的关系)，其中与表头的关系包括相同关系、None和键值关系。
请你仔细分析获得的表格，告诉我与{Target_none_tuple}具有相同的行索引，并且单元格与表头的关系为键值关系的单元格。
按照以下的步骤思考：
Step 1: 提取表格中所有与{Target_none_tuple}的行索引相同的单元格。
Step 2: 对Step 1中获得的单元格中进行逐个分析。请注意，如果该单元格与表头的关系为键值关系，则保留该单元格，如果与表头的关系是None，则删除该单元格。
        如果与表头的关系是相同关系，则删除该单元格。
Step 3: 根据以上两步获得的单元格以元组的形式储存，并以JSON格式表示，JSON键为"行条件元组"，值为列表，列表中的元素为符合条件的以元组表示的单元格。
形式化的输出格式为: {"行条件元组":"[(), ()]"}

Answer: 
"""

# 提取同列中的条件元组
user_query_tuple_column_text = """
获得的表格为
{Table_semantic_rich}
理解表格语义。表格中的元素为(行索引, 列索引, 单元格值-与表头的关系)，其中与表头的关系包括相同关系、None和键值关系。
请你分析获得的表格，仔细思考，告诉我与{Target_none_tuple}具有相同的列索引，并且单元格与表头的关系为键值关系的单元格。
请按照以下的步骤思考：
Step 1: 提取表格中所有与{Target_none_tuple}具有相同的列索引的非表头的单元格。
Step 2: 对Step 1中获得的单元格中进行逐个分析。请注意，如果该单元格与表头的关系为键值关系，则保留该单元格。如果与表头的关系是None，则删除该单元格。
        如果与表头的关系是相同关系，则删除该单元格。
Step 3: 如果Step 2中没有满足条件的单元格，则提取相同的列索引的表头单元格。
Step 4: 根据以上步骤获得的单元格以元组的形式储存，并以JSON格式表示，JSON键为"列条件元组"，值为列表，列表中的元素为符合条件的以元组表示的单元格。
形式化的输出格式为: {"列条件元组":"[(), ()]"}

Answer: 
"""

user_table_header_query = """
获得的表格为
{Table_semantic_rich}
请输出{condition_tuple_list}中所有单元格对应的表头单元格。将结果以JSON格式表示，JSON键为"表头"，值为列表，列表中的元素为单元格对应的以元组的表示的表头单元格。
形式化输出格式为{"表头":"[(), ()]"}

Answer:
"""

sysScorePromptText = """
你是一个精通XML语法的专家。
"""


promptScoreText = """
我们想确定两个xml文本是否相似。理想情况下，它们应该具有相同的内容和结构。在0到10之间评分“内容相似性”和“结构相似性”，可以是小数。
内容相似性：如果两个xml的内容相同，包括标签、属性和文本内容，则内容相似性为10。
           如果它们完全不同，则内容相似性为0。如果大约50％的标签、属性和文本具有相同的数据，则分数应为5。
结构相似性：如果两个xml文本中所有元素的数量、具有属性的元素的数量相同，则结构相似性为10。
输出JSON对象，例如以下内容：{"内容相似性":"",
                         "结构相似性":""}
仔细思考，然后输出分数。
Question: 请你分别从内容相似性和结构相似性两个角度判断两个xml文件的相似性。{xml_ground_truth}和{xml_predicated}
Answer:
"""

